---
- name: create DB
  mysql_db:
    name: heat
    state: present
    login_unix_socket: /var/run/mysqld/mysqld.sock
- name: adding user and granting privileges
  mysql_user:
    name: heat
    password: HEAT_DBPASS
    priv: "heat.*:ALL"
    state: present
    host: "{{item}}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  loop:
    - 'localhost'
    - '%'
- name: creating heat user, entity and API endpoints
  command: 
    cmd: "{{item}}"
  loop:
    - openstack user create --domain default --password 123 heat
    - openstack role add --project service --user heat admin
    - openstack service create --name heat --description "Orchestration" orchestration
    - openstack service create --name heat-cfn --description "Orchestration"  cloudformation
    - openstack endpoint create --region RegionOne orchestration public http://controller:8004/v1/%\(tenant_id\)s
    - openstack endpoint create --region RegionOne orchestration internal http://controller:8004/v1/%\(tenant_id\)s
    - openstack endpoint create --region RegionOne orchestration admin http://controller:8004/v1/%\(tenant_id\)s
    - openstack endpoint create --region RegionOne cloudformation public http://controller:8000/v1
    - openstack endpoint create --region RegionOne cloudformation internal http://controller:8000/v1
    - openstack endpoint create --region RegionOne cloudformation admin http://controller:8000/v1
    - openstack domain create --description "Stack projects and users" heat
    - openstack user create --domain heat --password 123 heat_domain_admin
    - openstack role add --domain heat --user-domain heat --user heat_domain_admin admin
    - openstack role create heat_stack_owner
    - openstack role add --project myproject --user myuser heat_stack_owner
    - openstack role create heat_stack_user
  environment:
    - OS_PROJECT_DOMAIN_NAME: Default
    - OS_USER_DOMAIN_NAME: Default
    - OS_PROJECT_NAME: admin
    - OS_USERNAME: admin
    - OS_PASSWORD: ADMIN_PASS
    - OS_AUTH_URL: http://controller:5000/v3
    - OS_IDENTITY_API_VERSION: 3
    - OS_IMAGE_API_VERSION: 2
- name: installing packages
  apt:
    name: "{{item}}"
    state: present
  loop:
    - heat-api 
    - heat-api-cfn 
    - heat-engine
- name: Heat Configuring
  template:
    src: heat.conf.j2
    dest: /etc/heat/heat.conf
    backup: yes
- name: populating heat database
  command:
    cmd: "{{item}}"
  loop:
  - su -s /bin/sh -c "heat-manage db_sync" heat
- name: Restarting Heat Services
  command:
    cmd: "{{item}}"
  loop:
  - service heat-api restart
  - service heat-api-cfn restart
  - service heat-engine restart